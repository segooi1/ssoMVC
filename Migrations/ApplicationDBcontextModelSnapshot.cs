// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sso.Controllers;

#nullable disable

namespace sso.Migrations
{
    [DbContext(typeof(ApplicationDBcontext))]
    partial class ApplicationDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("sso.Models.sessionInfo", b =>
                {
                    b.Property<DateTime>("session")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Isactive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("sessionDates")
                        .HasColumnType("datetime2");

                    b.Property<int>("sessionId")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("session");

                    b.ToTable("sessionInfos");
                });

            modelBuilder.Entity("sso.Models.userCred", b =>
                {
                    b.Property<int>("userName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userName"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userName");

                    b.ToTable("userCreds");
                });

            modelBuilder.Entity("sso.Models.userData", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authDomin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telephone")
                        .HasColumnType("int");

                    b.Property<int?>("userName")
                        .HasColumnType("int");

                    b.HasKey("email");

                    b.HasIndex("userName");

                    b.ToTable("userDatas");
                });

            modelBuilder.Entity("sso.Models.userData", b =>
                {
                    b.HasOne("sso.Models.userCred", "UserCred")
                        .WithMany()
                        .HasForeignKey("userName");

                    b.Navigation("UserCred");
                });
#pragma warning restore 612, 618
        }
    }
}
